/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as EventsEventIdImport } from './routes/events/$eventId'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const EventsRevealLazyImport = createFileRoute('/events/reveal')()
const EventsJoinLazyImport = createFileRoute('/events/join')()
const EventsCreateLazyImport = createFileRoute('/events/create')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const EventsRevealLazyRoute = EventsRevealLazyImport.update({
  id: '/events/reveal',
  path: '/events/reveal',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/reveal.lazy').then((d) => d.Route))

const EventsJoinLazyRoute = EventsJoinLazyImport.update({
  id: '/events/join',
  path: '/events/join',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/join.lazy').then((d) => d.Route))

const EventsCreateLazyRoute = EventsCreateLazyImport.update({
  id: '/events/create',
  path: '/events/create',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/events/create.lazy').then((d) => d.Route))

const EventsEventIdRoute = EventsEventIdImport.update({
  id: '/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/$eventId': {
      id: '/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof EventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/events/create': {
      id: '/events/create'
      path: '/events/create'
      fullPath: '/events/create'
      preLoaderRoute: typeof EventsCreateLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/join': {
      id: '/events/join'
      path: '/events/join'
      fullPath: '/events/join'
      preLoaderRoute: typeof EventsJoinLazyImport
      parentRoute: typeof rootRoute
    }
    '/events/reveal': {
      id: '/events/reveal'
      path: '/events/reveal'
      fullPath: '/events/reveal'
      preLoaderRoute: typeof EventsRevealLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/create': typeof EventsCreateLazyRoute
  '/events/join': typeof EventsJoinLazyRoute
  '/events/reveal': typeof EventsRevealLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/create': typeof EventsCreateLazyRoute
  '/events/join': typeof EventsJoinLazyRoute
  '/events/reveal': typeof EventsRevealLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/about': typeof AboutLazyRoute
  '/events/$eventId': typeof EventsEventIdRoute
  '/events/create': typeof EventsCreateLazyRoute
  '/events/join': typeof EventsJoinLazyRoute
  '/events/reveal': typeof EventsRevealLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/events/$eventId'
    | '/events/create'
    | '/events/join'
    | '/events/reveal'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/events/$eventId'
    | '/events/create'
    | '/events/join'
    | '/events/reveal'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/events/$eventId'
    | '/events/create'
    | '/events/join'
    | '/events/reveal'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AboutLazyRoute: typeof AboutLazyRoute
  EventsEventIdRoute: typeof EventsEventIdRoute
  EventsCreateLazyRoute: typeof EventsCreateLazyRoute
  EventsJoinLazyRoute: typeof EventsJoinLazyRoute
  EventsRevealLazyRoute: typeof EventsRevealLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AboutLazyRoute: AboutLazyRoute,
  EventsEventIdRoute: EventsEventIdRoute,
  EventsCreateLazyRoute: EventsCreateLazyRoute,
  EventsJoinLazyRoute: EventsJoinLazyRoute,
  EventsRevealLazyRoute: EventsRevealLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/events/$eventId",
        "/events/create",
        "/events/join",
        "/events/reveal"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/events/$eventId": {
      "filePath": "events/$eventId.tsx"
    },
    "/events/create": {
      "filePath": "events/create.lazy.tsx"
    },
    "/events/join": {
      "filePath": "events/join.lazy.tsx"
    },
    "/events/reveal": {
      "filePath": "events/reveal.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
